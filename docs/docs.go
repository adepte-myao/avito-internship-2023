// Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/segments/change-for-user": {
            "post": {
                "description": "Validates given segment changes and applies them",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "segment"
                ],
                "parameters": [
                    {
                        "description": "userID, which segments to change, and segments lists to add/remove",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/segments_ports.ChangeSegmentsForUserDTO"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/segments/create": {
            "post": {
                "description": "Validates given segment creates it",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "segment"
                ],
                "parameters": [
                    {
                        "description": "slug and probability for each user to be added to segment",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/segments_ports.CreateSegmentDTO"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/segments/create-user": {
            "post": {
                "description": "Saves information about user in local storage",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "description": "userID to save",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/segments_ports.CreateUserDTO"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/segments/get-for-user": {
            "get": {
                "description": "Returns the list of segments for given user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "segment"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "identifier of user which segments to provide",
                        "name": "userID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/segments_ports.GetSegmentsForUserOutDTO"
                        }
                    }
                }
            }
        },
        "/segments/get-history-report-link": {
            "get": {
                "description": "Returns the link to the report that contains history of segment assignments for given user in given month, year. Link to the report expires in four hours.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "segment"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "identifier of user which history to provide",
                        "name": "userID",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "number of month (1-12) for which history will be provided",
                        "name": "month",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "year",
                        "name": "year",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/segment_handlers.getSegmentsHistoryReportLinkOutDTO"
                        }
                    }
                }
            }
        },
        "/segments/remove": {
            "delete": {
                "description": "Removes given segment and excludes all users from it",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "segment"
                ],
                "parameters": [
                    {
                        "description": "slug of segment to remove",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/segments_ports.RemoveSegmentDTO"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/segments/remove-user": {
            "delete": {
                "description": "Removes user from local storage and excludes him from all segments he has",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "description": "userID to remove",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/segments_ports.RemoveUserDTO"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/segments/update-user": {
            "put": {
                "description": "Updates user info",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "description": "userID and his status to update ",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/segments_ports.UpdateUserDTO"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        }
    },
    "definitions": {
        "segment_handlers.getSegmentsHistoryReportLinkOutDTO": {
            "type": "object",
            "properties": {
                "expirationTime": {
                    "type": "string"
                },
                "reportLink": {
                    "type": "string"
                }
            }
        },
        "segments_domain.UserStatus": {
            "type": "string",
            "enum": [
                "active",
                "excluded"
            ],
            "x-enum-varnames": [
                "Active",
                "Excluded"
            ]
        },
        "segments_ports.AddSegmentEntry": {
            "type": "object",
            "required": [
                "segmentSlug"
            ],
            "properties": {
                "deadlineForStayingInSegment": {
                    "type": "string"
                },
                "secondsToBeInSegment": {
                    "type": "integer",
                    "minimum": 1
                },
                "segmentSlug": {
                    "type": "string"
                }
            }
        },
        "segments_ports.ChangeSegmentsForUserDTO": {
            "type": "object",
            "required": [
                "userID"
            ],
            "properties": {
                "segmentsToAdd": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/segments_ports.AddSegmentEntry"
                    }
                },
                "segmentsToRemove": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/segments_ports.RemoveSegmentEntry"
                    }
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "segments_ports.CreateSegmentDTO": {
            "type": "object",
            "required": [
                "slug"
            ],
            "properties": {
                "percentToFill": {
                    "type": "number",
                    "maximum": 100,
                    "minimum": 0
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "segments_ports.CreateUserDTO": {
            "type": "object",
            "required": [
                "userID"
            ],
            "properties": {
                "userID": {
                    "type": "string"
                }
            }
        },
        "segments_ports.GetSegmentsForUserOutDTO": {
            "type": "object",
            "properties": {
                "segments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "segments_ports.RemoveSegmentDTO": {
            "type": "object",
            "required": [
                "slug"
            ],
            "properties": {
                "slug": {
                    "type": "string"
                }
            }
        },
        "segments_ports.RemoveSegmentEntry": {
            "type": "object",
            "required": [
                "segmentSlug"
            ],
            "properties": {
                "segmentSlug": {
                    "type": "string"
                }
            }
        },
        "segments_ports.RemoveUserDTO": {
            "type": "object",
            "required": [
                "userID"
            ],
            "properties": {
                "userID": {
                    "type": "string"
                }
            }
        },
        "segments_ports.UpdateUserDTO": {
            "type": "object",
            "required": [
                "userID"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/segments_domain.UserStatus"
                },
                "userID": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Avito Internship Service: User Segments",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
